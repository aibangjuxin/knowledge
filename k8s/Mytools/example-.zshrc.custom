# 个人自定义 .zshrc 配置
# 将此文件复制到宿主机挂载目录 /opt/share/.zshrc.custom
# 容器启动时会自动追加到 ~/.zshrc

# ============================================================================
# 个人提示符配置
# ============================================================================

# 自定义提示符颜色（如果不喜欢 agnoster 主题）
# PROMPT='%F{cyan}┌──(%f%F{red}%n%f%F{yellow}@%f%F{blue}%m%f%F{cyan})-[%f%F{white}%~%f%F{cyan}]%f
# %F{cyan}└─%f%F{green}$%f '

# ============================================================================
# 个人插件配置
# ============================================================================

# 如果需要额外的插件，可以在这里添加
# plugins+=(your-custom-plugin)

# ============================================================================
# 个人环境变量
# ============================================================================

# 个人工具路径
export PATH="$PATH:/opt/share/tools/bin"
export PATH="$PATH:/opt/share/scripts"

# 个人 Python 路径
export PYTHONPATH="$PYTHONPATH:/opt/share/python-libs"

# 个人临时目录
export TMPDIR="/opt/share/tmp"

# ============================================================================
# 个人别名扩展
# ============================================================================

# 个人快捷命令
alias mytools='cd /opt/share/tools && ls -la'
alias myscripts='cd /opt/share/scripts && ls -la'
alias myprojects='cd /opt/share/projects && ls -la'

# 个人日志查看
alias taillog='tail -f /opt/share/logs/app.log'
alias viewlog='less /opt/share/logs/app.log'

# 个人网络测试
alias testnet='ping -c 4 8.8.8.8'
alias testdns='nslookup google.com'

# ============================================================================
# 个人函数扩展
# ============================================================================

# 个人笔记函数
note() {
    local note_file="/opt/share/notes/$(date +%Y%m%d).md"
    local timestamp=$(date '+%H:%M:%S')
    
    if [ $# -eq 0 ]; then
        echo "用法: note <内容>"
        echo "查看今日笔记: cat $note_file"
        return 1
    fi
    
    # 确保笔记目录存在
    mkdir -p "/opt/share/notes"
    
    # 如果是新文件，添加标题
    if [ ! -f "$note_file" ]; then
        echo "# $(date '+%Y年%m月%d日') 工作笔记" > "$note_file"
        echo "" >> "$note_file"
    fi
    
    # 添加时间戳和内容
    echo "## $timestamp" >> "$note_file"
    echo "$*" >> "$note_file"
    echo "" >> "$note_file"
    
    echo "✅ 笔记已保存到: $note_file"
}

# 个人任务管理函数
todo() {
    local todo_file="/opt/share/todo.txt"
    
    case "$1" in
        "add"|"a")
            shift
            echo "- [ ] $*" >> "$todo_file"
            echo "✅ 任务已添加: $*"
            ;;
        "list"|"l"|"")
            if [ -f "$todo_file" ]; then
                echo "📋 待办事项:"
                cat -n "$todo_file"
            else
                echo "📋 暂无待办事项"
            fi
            ;;
        "done"|"d")
            if [ -f "$todo_file" ]; then
                echo "📋 选择要完成的任务:"
                cat -n "$todo_file"
                echo -n "输入任务编号: "
                read task_num
                if [[ "$task_num" =~ ^[0-9]+$ ]]; then
                    sed -i "${task_num}s/- \[ \]/- [x]/" "$todo_file"
                    echo "✅ 任务 $task_num 已标记为完成"
                fi
            fi
            ;;
        "clear"|"c")
            > "$todo_file"
            echo "🗑️  待办事项已清空"
            ;;
        *)
            echo "用法: todo [add|list|done|clear] [内容]"
            echo "  add/a <内容>  - 添加任务"
            echo "  list/l        - 显示任务列表"
            echo "  done/d        - 标记任务完成"
            echo "  clear/c       - 清空任务列表"
            ;;
    esac
}

# ============================================================================
# 个人启动脚本
# ============================================================================

# 创建个人目录结构
mkdir -p /opt/share/{tools,scripts,projects,notes,logs,tmp,backups}

# 显示个人欢迎信息
echo ""
echo "🎯 个人配置已加载"
echo "💡 个人命令:"
echo "  note <内容>      - 添加笔记"
echo "  todo add <任务>  - 添加待办"
echo "  todo list        - 查看待办"
echo "  mytools          - 查看个人工具"
echo "  myprojects       - 查看个人项目"