apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-app
  namespace: psc-demo
  labels:
    app: db-app
    version: v1.0.0
spec:
  replicas: 2
  selector:
    matchLabels:
      app: db-app
  template:
    metadata:
      labels:
        app: db-app
        version: v1.0.0
      annotations:
        # 强制重启 Pod 当配置更改时
        kubectl.kubernetes.io/restartedAt: "TIMESTAMP"
    spec:
      serviceAccountName: db-app-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: db-app
        image: gcr.io/PROJECT_ID/db-app:latest  # 将被替换为实际的镜像
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        # 从 ConfigMap 加载配置
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: DB_USER
        - name: DB_MAX_CONNECTIONS
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: DB_MAX_CONNECTIONS
        - name: DB_MAX_IDLE_CONNECTIONS
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: DB_MAX_IDLE_CONNECTIONS
        - name: DB_CONNECTION_MAX_LIFETIME
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: DB_CONNECTION_MAX_LIFETIME
        - name: DB_CONNECTION_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: DB_CONNECTION_TIMEOUT
        - name: APP_PORT
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: APP_PORT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: LOG_LEVEL
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: ENVIRONMENT
        
        # 从 Secret 加载敏感信息
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: DB_PASSWORD
        
        # Pod 信息
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        
        # 健康检查
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        # 启动探针
        startupProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 12  # 最多等待 60 秒启动
        
        # 安全上下文
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        
        # 挂载临时目录
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
      
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
      
      # Pod 反亲和性 - 确保 Pod 分布在不同节点
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - db-app
              topologyKey: kubernetes.io/hostname
      
      # 容忍度配置
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300